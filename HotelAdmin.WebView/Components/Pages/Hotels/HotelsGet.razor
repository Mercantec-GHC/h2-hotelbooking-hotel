@page "/hotel/{Id}"
@attribute [Authorize(Roles = "HotelWorker")]
@inject NavigationManager NavigationManager
@inject ApiService ApiService

@if (hotel != null)
{
    <PageTitle>@hotel.Name</PageTitle>

    <Card Class="shadow">
        <CardHeader>
            <h1>Get Hotel - @Id</h1>
        </CardHeader>
        <CardBody Class="border-bottom pb-2">
            <ul class="nav nav-tabs card-header-tabs">
                <li class="nav-item">
                    <button Class="nav-link @(page == "info" ? "active" : "")" @onclick="@(() => page = "info")">Hotel</button>
                </li>
                <li class="nav-item">
                    <button Class="nav-link @(page == "rooms" ? "active" : "")" @onclick="@(() => page = "rooms")">Rooms</button>
                </li>
                <li class="nav-item">
                    <button Class="nav-link @(page == "users" ? "active" : "")" @onclick="@(() => page = "users")">Workers</button>
                </li>
            </ul>
        </CardBody>
        <CardBody>
            @if (page == "info")
            {
                <Card Class="mb-3">
                    <CardBody>
                        <div class="row g-3">
                            <div class="col-12">
                                <p class="fw-bold m-0">Description:</p>
                                <div class="px-3">
                                    @hotel.Description
                                </div>
                            </div>
                            <div class="col-12">
                                <p class="fw-bold m-0">Country:</p>
                                <div class="px-3">
                                    @hotel.Country
                                </div>
                            </div>
                            <div class="col-12">
                                <p class="fw-bold m-0">Region:</p>
                                <div class="px-3">
                                    @hotel.Region
                                </div>
                            </div>
                            <div class="col-12">
                                <p class="fw-bold m-0">City:</p>
                                <div class="px-3">
                                    @hotel.City
                                </div>
                            </div>
                            <div class="col-12">
                                <p class="fw-bold m-0">Postal Code:</p>
                                <div class="px-3">
                                    @hotel.PostalCode
                                </div>
                            </div>
                        </div>
                    </CardBody>
                </Card>

                <AuthorizeView Roles="ConcernAdmin">
                    <Authorized>
                        <div class="d-flex justify-content-end">
                            <Button Type="ButtonType.Button"
                                    Color="ButtonColor.Danger"
                                    @onclick="DeleteConfirmModalShow">
                                Delete
                            </Button>
                        </div>
                    </Authorized>
                </AuthorizeView>
            }
            else if (page == "rooms")
            {
                <RoomsComponent HotelId="@Id" />
            }
            else if (page == "users")
            {
                <UsersComponent HotelId="@Id" />
            }
        </CardBody>
        <CardFooter></CardFooter>
    </Card>
    <Modal @ref="deleteConfirmModal" Title="Please confirm" IsVerticallyCentered="true">
        <BodyTemplate>
            Are you sure you want to delete this hotel?
            @if (warningVisible)
            {
                <div class="validation-message">Failed to delete hotel!</div>
            }
        </BodyTemplate>
        <FooterTemplate>
            <Button Color="ButtonColor.Secondary" @onclick="DeleteConfirmModalHide">Close</Button>
            <Button Color="ButtonColor.Danger" @onclick="HandleDeletion">Delete</Button>
        </FooterTemplate>
    </Modal>
}
else
{
    <div class="row justify-content-center mt-5">
        <div class="col-auto fw-bold">
            <span class="spinner-border" style="width: 3rem; height: 3rem;" aria-hidden="true"></span>
            <span role="status" style="font-size: 3rem;">Loading...</span>
        </div>
    </div>
}

@code {
    [Parameter] public string? Id { get; set; }
    private HotelDTO hotel;
    private string page = "info";
    private Modal deleteConfirmModal;
    private bool warningVisible = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            hotel = await ApiService.GetHotel(Id);
            if (hotel == null) NavigationManager.NavigateTo($"/hotels");
            else StateHasChanged();
        }
    }


    private async Task HandleDeletion()
    {
        var response = await ApiService.DeleteHotel(Id);

        if (response == true)
        {
            NavigationManager.NavigateTo($"/hotels", true);
        }
        else
        {
            warningVisible = true;
        }
    }

    private async Task DeleteConfirmModalShow()
    {
        await deleteConfirmModal?.ShowAsync();
    }

    private async Task DeleteConfirmModalHide()
    {
        await deleteConfirmModal?.HideAsync();
    }
}