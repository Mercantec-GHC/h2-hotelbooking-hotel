@page "/hotels/add"
@attribute [Authorize(Roles = "ConcernAdmin")]
@inject NavigationManager NavigationManager
@inject ApiService ApiService

<PageTitle>Add Hotel</PageTitle>

<Card Class="shadow">
    <EditForm Model="hotelDTO" OnValidSubmit="OnShowModalClick" novalidate>
        <DataAnnotationsValidator />

        <CardHeader>
            <h1>Add Hotel</h1>
        </CardHeader>
        <CardBody>
            <div class="row gy-3 gx-5">
                <div class="col-12 col-md-6">
                    <div class="mb-3">
                        <label for="nameInput" class="form-label fw-bold">Name:</label>
                        <TextInput @bind-Value="@hotelDTO.Name" Id="nameInput" Placeholder="Enter Hotel Name" />
                        <ValidationMessage For="@(() => hotelDTO.Name)" />
                    </div>
                    <div>
                        <label for="descriptionInput" class="form-label fw-bold">Description:</label>
                        <TextAreaInput @bind-Value="hotelDTO.Description" class="form-control mb-3" Placeholder="Enter Hotel Name" Id="descriptionInput" rows="3"></TextAreaInput>
                        <ValidationMessage For="@(() => hotelDTO.Description)" />
                    </div>
                </div>
                <div class="col-12 col-md-6">
                    <div class="mb-3">
                        <label for="countryInput" class="form-label fw-bold">Country:</label>
                        <TextInput @bind-Value="@hotelDTO.Country" Id="countryInput" Placeholder="Enter Hotel Country" />
                        <ValidationMessage For="@(() => hotelDTO.Country)" />
                    </div>
                    <div class="mb-3">
                        <label for="regionInput" class="form-label fw-bold">Region:</label>
                        <TextInput @bind-Value="@hotelDTO.Region" Id="regionInput" Placeholder="Enter Hotel Region" />
                        <ValidationMessage For="@(() => hotelDTO.Region)" />
                    </div>
                    <div class="mb-3">
                        <label for="cityInput" class="form-label fw-bold">City:</label>
                        <TextInput @bind-Value="@hotelDTO.City" Id="cityInput" Placeholder="Enter Hotel City" />
                        <ValidationMessage For="@(() => hotelDTO.City)" />
                    </div>
                    <div>
                        <label for="countryInput" class="form-label fw-bold">Postal Code:</label>
                        <TextInput @bind-Value="@hotelDTO.PostalCode" Id="countryInput" Placeholder="Enter Hotel Postal Code" />
                        <ValidationMessage For="@(() => hotelDTO.PostalCode)" />
                    </div>
                </div>
            </div>

            <Modal @ref="modal" Title="Confirm" IsVerticallyCentered="true">
                <BodyTemplate>
                    <p class="m-0"><b>Name:</b> @hotelDTO.Name</p>
                    <p class="m-0"><b>Description:</b> @hotelDTO.Description</p>
                    <p class="m-0"><b>Country:</b> @hotelDTO.Country</p>
                    <p class="m-0"><b>Region:</b> @hotelDTO.Region</p>
                    <p class="m-0"><b>City:</b> @hotelDTO.City</p>
                    <p class="m-0"><b>Postal Code:</b> @hotelDTO.PostalCode</p>
                </BodyTemplate>
                <FooterTemplate>
                    <Button Type="ButtonType.Button" Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
                    <Button Type="ButtonType.Button" Color="ButtonColor.Primary" @onclick="HandleValidSubmit">Confirm</Button>
                </FooterTemplate>
            </Modal>

        </CardBody>
        <CardFooter>
            <div class="d-flex justify-content-end">
                <Button Type="ButtonType.Submit" Color="ButtonColor.Primary">Add Hotel</Button>
            </div>
        </CardFooter>
    </EditForm>
</Card>

@code {
    private CreateHotelDTO hotelDTO = new CreateHotelDTO();

    private Modal modal = default!;

    private async Task OnShowModalClick()
    {
        await modal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal.HideAsync();
    }

    private async Task HandleValidSubmit()
    {
        var result = await ApiService.CreateHotel(hotelDTO);
        if (result != null) NavigationManager.NavigateTo($"/hotel/{result.Id}");
        else await modal.HideAsync();
    }
}